{"mappings":"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","sources":["src/favorites.js","src/js/favorite/favorite-main.js","src/js/favorite/constants.js","src/js/favorite/localStorageUtils.js","src/js/favorite/utils.js","src/js/favorite/pagination.js","src/js/favorite/display-favorites.js","src/js/favorite/handleCategotyFilter.js","src/js/favorite/updateCategoryList.js","src/js/favorits-scroll.js","src/js/favorite/modal-fav.js"],"sourcesContent":["import './js/mobile-menu';\nimport './js/favorite/favorite-main';\nimport './js/cart/cart';\nimport './js/favorits-scroll';\nimport './js/favorite/modal-fav';\nimport './js/modals/open-rating';\n","import RecipeApiService from '../service/service-api';\nimport refs from './constants';\nimport { getFromLocalStorage } from '../favorite/localStorageUtils';\nimport { handleCategoryFilter } from '../favorite/handleCategotyFilter';\nimport { displayFavorites } from '../favorite/display-favorites';\nimport {\n  updateCategoryList,\n  renderCategories,\n} from '../favorite/updateCategoryList';\nimport { showLoader, hideLoader } from '../loader';\n\nconst recipeApiSeriсe = new RecipeApiService();\n\n//\n// Add accent color on load page.\n//\nfunction modifyClassesOnLoad() {\n  const links = document.querySelectorAll('.menu-nav-links');\n\n  if (links[0].classList.contains('header-accent')) {\n    links[0].classList.remove('header-accent');\n\n    if (links.length > 1) {\n      links[1].classList.add('header-accent');\n    }\n  }\n}\n\n// Вызываем функцию при загрузке страницы\nwindow.addEventListener('load', modifyClassesOnLoad);\n\nexport function onFavoritesReload() {\n  showLoader();\n\n  const categoryMarkup = createCategoryList();\n  const allCatBtn = `<button class=\"fav-button common-btn is-active\" name=\"main-cat-btn\">All categories</button>`;\n\n  const data = getFromLocalStorage('favoriteRecipes');\n  refs.recipesListContainer.innerHTML = '';\n  refs.categoriesContainer.innerHTML =\n    data && data.length ? `${allCatBtn}${categoryMarkup}` : '';\n\n  displayFavorites();\n\n  hideLoader();\n}\n\n/**\n * Generates the markup for the list of unique categories from favorites data stored in localStorage.\n * {string} The category list markup or an empty string if there is no data.\n */\nfunction createCategoryList() {\n  const storage = localStorage.getItem('favoriteRecipes');\n  const data = JSON.parse(storage);\n\n  if (!data || data.length === 0) return '';\n\n  const uniqueCategories = data\n    .flatMap(recipe => recipe.category)\n    .filter((category, index, array) => array.indexOf(category) === index);\n  return uniqueCategories.reduce(\n    (categoryMarkup, category) => categoryMarkup + renderCategories(category),\n    ''\n  );\n}\n\n// ========================== //\n// Remove from Favourite\n// ========================== //\n\ndocument.addEventListener('click', function (event) {\n  const button = event.target.closest('.heart-btn');\n  if (button) {\n    onClickRemoveFavRec(event);\n  }\n});\n\nfunction onClickRemoveFavRec(event) {\n  const button = event.target;\n\n  // Вызываем функцию удаления избранного рецепта\n  removeFavorite(button);\n\n  // Удаляем класс \"active\" (если он присутствует)\n  button.classList.remove('active');\n\n  // onFavoritesReload();\n}\n\n/**\n * Removes the favorite recipe from localStorage and reloads the favorites list.\n *  currentBtn - The current button element representing the favorite recipe.\n */\nfunction removeFavorite(currentBtn) {\n  // Получаем значение data-info (id) для текущей кнопки\n  const id = currentBtn.dataset.info;\n\n  // Получаем из localStorage данные\n  const favoriteRecipes =\n    JSON.parse(localStorage.getItem('favoriteRecipes')) || [];\n\n  // Фильтруем массив, удаляя объект с указанным id\n  const updatedFavorites = favoriteRecipes.filter(recipe => recipe.id !== id);\n\n  // Обновляем данные в localStorage\n  localStorage.setItem('favoriteRecipes', JSON.stringify(updatedFavorites));\n\n  // Перезагружаем список избранных рецептов\n  onFavoritesReload();\n}\n\n/**\n * Handles the click event on the recipe buttons in the favorites view.\n * event - The click event object.\n */\nfunction handleRecipeButtonEvent({ target }) {\n  if (!target.closest('button')) return;\n  const currentBtn = target.closest('button');\n\n  if (currentBtn.name === 'favoriteRecipes') {\n    removeFavorite(currentBtn);\n    updateCategoryList(target);\n  }\n}\n\n// Add event listeners to the corresponding elements when the DOM is fully loaded.\n\n// Event listener for handling recipe button clicks in the favorites view.\nrefs.renderedRecipesBox.addEventListener('click', handleRecipeButtonEvent);\n\n// Event listener for handling category filter clicks in the favorites view.\nrefs.categoriesList.addEventListener('click', handleCategoryFilter);\n\n// Event listener for reloading the favorites view when the DOM is fully loaded.\ndocument.addEventListener('DOMContentLoaded', onFavoritesReload);\n","const refs = {\n  recipesListContainer: document.querySelector('.fav-list'),\n  categoriesContainer: document.querySelector('.fav-categories'),\n  noFavoritesMessage: document.querySelector('.fav-empty'),\n  paginationElement: document.getElementById('pagination'),\n  allButton: document.querySelector('.common-btn'),\n  categoriesList: document.querySelector('.fav-categories'),\n  renderedRecipesBox: document.getElementById('fav-rendered-card'),\n  heroImage: document.querySelector('.fav-hero'),\n};\n\nexport default refs;\n","export function saveToLocalStorage(key, data) {\n  localStorage.setItem(key, JSON.stringify(data));\n}\n\nexport function getFromLocalStorage(key) {\n  const data = localStorage.getItem(key);\n  return JSON.parse(data);\n}\n","// Calculates the number of items per page\nexport function countPage() {\n  return window.innerWidth < 768 ? 9 : 12;\n}\n\n/**\n * Groups an array into chunks of a specified size.\n *\n *  array - The array to be grouped into chunks.\n *  chunkSize - The size of each chunk(Part).\n * {Object} An object containing the grouped chunks, with chunk numbers as keys.\n */\nexport function groupArrayIntoChunks(array, chunkSize) {\n  const groupedChunks = {};\n  for (let i = 0; i < array.length; i += chunkSize) {\n    const chunkNumber = Math.floor(i / chunkSize) + 1;\n    groupedChunks[chunkNumber] = array.slice(i, i + chunkSize);\n  }\n  return groupedChunks;\n}\n","import Pagination from 'tui-pagination';\nimport 'tui-pagination/dist/tui-pagination.css';\n\nfunction resizeVisPage() {\n  const screenWidth = window.innerWidth;\n  return screenWidth < 768 ? 2 : 3;\n}\n\nfunction createPagination(page, perPage, totalPages, callback) {\n  const options = {\n    totalItems: perPage * totalPages,\n    itemsPerPage: perPage,\n    visiblePages: resizeVisPage(),\n    page,\n    centerAlign: false,\n    omitMiddlePages: false,\n    firstItemClassName: 'tui-first-child',\n    lastItemClassName: 'tui-last-child',\n    template: {\n      page: '<a href=\"#\" class=\"tui-page-btn pag-page\">{{page}}</a>',\n      currentPage:\n        '<strong class=\"tui-page-btn tui-is-selected\">{{page}}</strong>',\n      moveButton:\n        '<a href=\"#\" class=\"tui-page-btn tui-{{type}} move-button\">' +\n        '<span class=\"tui-ico-{{type}}\">{{type}}</span>' +\n        '</a>',\n      disabledMoveButton:\n        '<span class=\"tui-page-btn tui-is-disabled tui-{{type}} prev-button\">' +\n        '<span class=\"tui-ico-{{type}}\">{{type}}</span>' +\n        '</span>',\n      moreButton:\n        '<a href=\"#\" class=\"tui-page-btn tui-{{type}}-is-ellip more-button\">' +\n        '<span class=\"tui-ico-ellip\">...</span>' +\n        '</a>',\n    },\n  };\n\n  const pagination = new Pagination('pagination', options);\n\n  pagination.on('afterMove', ({ page }) => {\n    callback(page);\n  });\n}\n\nexport default createPagination;\n","import refs from './constants';\nimport { getFromLocalStorage } from '../favorite/localStorageUtils';\nimport { countPage, groupArrayIntoChunks } from '../favorite/utils';\nimport createPagination from '../favorite/pagination';\nimport { renderingFavRec } from '../favorite/rendering-fav';\nimport { showLoader, hideLoader } from '../loader';\n\nexport function displayFavorites(pageSet = 1) {\n  showLoader();\n\n  const data = getFromLocalStorage('favoriteRecipes');\n\n  // Show or hide the \"All\" button based on whether there is data in localStorage.\n  refs.allButton.style.display = data && data.length ? 'block' : 'none';\n\n  // Display a message and hide the \"All\" button if there is no data in localStorage or the data array is empty.\n  if (!data || data.length === 0) {\n    refs.noFavoritesMessage.classList.remove('visually-hidden');\n    refs.allButton.classList.add('visually-hidden');\n    if (window.innerWidth < 768)\n      refs.heroImage.classList.add('visually-hidden');\n    return;\n  }\n\n  const perPage = countPage();\n  const objData = groupArrayIntoChunks(data, perPage);\n  const totalPages = Object.keys(objData).length;\n\n  refs.paginationElement.style.display = totalPages > 1 ? 'block' : 'none';\n  createPagination(pageSet, perPage, totalPages, displayFavorites);\n\n  const listMarkup = objData[pageSet]\n    .map(({ title, description, preview, rating, id, category }) =>\n      renderingFavRec(title, description, preview, rating, id, category)\n    )\n    .join('');\n\n  refs.recipesListContainer.innerHTML = listMarkup;\n  refs.noFavoritesMessage.classList.add('visually-hidden');\n\n  hideLoader();\n}\n","import refs from './constants';\nimport { countPage, groupArrayIntoChunks } from '../favorite/utils';\nimport { renderingFavRec } from '../favorite/rendering-fav';\nimport createPagination from '../favorite/pagination';\nimport { displayFavorites } from '../favorite/display-favorites';\nimport { showLoader, hideLoader } from '../loader';\n\nlet currentBtn = '';\n\n/**\n * Toggles the 'is-active' class on the target element.\n */\nfunction toggleActiveClass({ target }) {\n  const btn = document.querySelector('.is-active');\n  if (!btn) refs.allButton.classList.add('is-active');\n  else btn.classList.remove('is-active');\n  target.classList.add('is-active');\n}\n\n/**\n * Handles the category filter event.\n * {Event} evt - The event object.\n */\nexport function handleCategoryFilter(evt) {\n  showLoader();\n\n  if (evt.target.classList.contains('is-active')) return;\n\n  let data = [];\n  let categoryRecipes;\n  refs.recipesListContainer.innerHTML = '';\n\n  if (evt !== Number(evt) && evt.target.nodeName === 'BUTTON') {\n    toggleActiveClass(evt);\n    currentBtn =\n      evt.target.name === 'main-cat-btn' ? '' : evt.target.textContent;\n  }\n\n  const storage = localStorage.getItem('favoriteRecipes');\n  data = JSON.parse(storage);\n\n  if (!data || data.length === 0) {\n    refs.categoriesContainer.style.display = 'none';\n    return;\n  }\n\n  if (!currentBtn) {\n    displayFavorites();\n    return;\n  }\n\n  categoryRecipes = [...data.filter(recipe => recipe.category === currentBtn)];\n\n  let pageSet = 1;\n\n  if (Number(evt) === evt) pageSet = evt;\n\n  const perPage = countPage();\n  const objData = groupArrayIntoChunks(categoryRecipes, perPage);\n  const totalPages = Object.keys(objData).length;\n\n  refs.paginationElement.style.display = totalPages > 1 ? 'block' : 'none';\n  createPagination(pageSet, perPage, totalPages, displayFavorites);\n\n  const listMarkup = objData[pageSet].reduce(\n    (markup, { title, description, preview, rating, id, category }) =>\n      markup +\n      renderingFavRec(title, description, preview, rating, id, category),\n    ''\n  );\n\n  refs.recipesListContainer.innerHTML = listMarkup;\n\n  hideLoader();\n}\n","import { getFromLocalStorage } from '../favorite/localStorageUtils';\nimport { showLoader, hideLoader } from '../loader';\n\n/**\n * Generates the markup for a category button.\n * {string} category - The category name.\n * return {string} The category button markup.\n */\nexport function renderCategories(category) {\n  return `<button class=\"fav-button\">${category}</button>`;\n}\n\n/**\n * Updates the category list in the favorites view based on the selected recipe's category.\n *  target - The target element representing the selected recipe.\n */\nexport function updateCategoryList(target) {\n  showLoader();\n\n  const currentRec = target.closest('div.recipe-item').dataset.category;\n  const storageItems = getFromLocalStorage('favoriteRecipes');\n  const isCategoryLocal = storageItems.find(el => el.category === currentRec);\n  const isCategoryRendered = [...refs.categoriesContainer.children].find(\n    el => el.textContent === currentRec\n  );\n\n  if (!isCategoryLocal && isCategoryRendered) isCategoryRendered.remove();\n  else if (isCategoryLocal && !isCategoryRendered)\n    refs.categoriesContainer.insertAdjacentHTML(\n      'beforeend',\n      renderCategories(currentRec)\n    );\n\n  refs.allButton.style.display =\n    storageItems && storageItems.length ? 'block' : 'none';\n\n  hideLoader();\n}\n","const scrollToTopBtn = document.querySelector('.scroll-to-top');\nconst carSection = document.querySelector('.fav-list');\nlet prevScrollPos = window.pageYOffset;\n\nfunction scrollToTop() {\n  window.scrollTo({\n    top: 0,\n    behavior: 'smooth',\n  });\n  scrollToTopBtn.style.display = 'none';\n}\n\nfunction scrollToTopButtonVisibility() {\n  const windowHeight = window.innerHeight;\n  const carSectionHeight = carSection.offsetHeight;\n  const scrollY = window.scrollY;\n\n  if (scrollY <= prevScrollPos || scrollY + windowHeight >= carSectionHeight) {\n    scrollToTopBtn.style.display = 'block';\n  } else {\n    scrollToTopBtn.style.display = 'none';\n  }\n\n  if (scrollY === 0 || scrollY > prevScrollPos) {\n    scrollToTopBtn.style.display = 'none';\n  }\n\n  prevScrollPos = scrollY;\n}\n\nscrollToTopBtn.addEventListener('click', scrollToTop);\nwindow.addEventListener('scroll', scrollToTopButtonVisibility);\n","import axios from 'axios';\n\nimport { onFavoritesReload } from './favorite-main';\nlet recipe;\nconst backdrop = document.querySelector('.backdrop-recipes');\nconst closeButton = document.querySelector('.modal-close-btn');\nconst modal = document.querySelector('.modal-recipes');\n\ncloseButton.addEventListener('click', closeModal);\ndocument.addEventListener('keydown', onEscKeyPress);\n\nbackdrop.addEventListener('click', event => {\n  if (event.target !== modal && !modal.contains(event.target)) {\n    closeModal();\n  }\n});\n\n// Відкриття модального вікна\nfunction openModal() {\n  if (modal) {\n    modal.classList.remove('is-hidden');\n    backdrop.classList.remove('is-hidden');\n    document.addEventListener('keydown', onEscKeyPress);\n\n    modal.addEventListener('click', event => {\n      event.stopPropagation();\n    });\n\n    backdrop.removeEventListener('click', closeModal);\n    backdrop.addEventListener('click', closeModal);\n\n    updateFavoriteButtonStatus(recipe);\n  }\n}\n\n// Закриття модального вікна:\nfunction closeModal() {\n  if (modal) {\n    const recipeVideoIframe = document.querySelector('.recipes-iframe-video');\n    recipeVideoIframe.src = '';\n    modal.classList.add('is-hidden');\n    document.removeEventListener('keydown', onEscKeyPress);\n    backdrop.removeEventListener('click', closeModal);\n    backdrop.classList.add('is-hidden');\n  }\n}\n\nfunction onEscKeyPress(event) {\n  if (event.key === 'Escape') {\n    closeModal();\n  }\n}\n\nbackdrop.addEventListener('click', event => {\n  if (event.target === backdrop) {\n    closeModal();\n  }\n});\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const recipesContainer = document.querySelector('.image-container');\n  const popularList = document.querySelector('.popular-list');\n\n  // Event listener for '.rec-btn-open' buttons\n  recipesContainer.addEventListener('click', async event => {\n    const seeRecipeBtn = event.target.closest('.rec-btn-open');\n    if (!seeRecipeBtn) return;\n\n    const recipeId = seeRecipeBtn.dataset.id;\n    try {\n      const fetchedRecipe = await fetchRecipe(recipeId);\n      if (fetchedRecipe) {\n        recipe = fetchedRecipe;\n        updateFavoriteButtonStatus(recipe);\n        openModal();\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  });\n\n  // Event listener for <li> elements inside '.popular-list'\n  if (popularList) {\n    // Event listener for <li> elements inside '.popular-list'\n    popularList.addEventListener('click', async event => {\n      const listItem = event.target.closest('.popular-list-item');\n      if (!listItem) return;\n\n      const recipeId = listItem.dataset.id;\n      try {\n        const fetchedRecipe = await fetchRecipe(recipeId);\n        if (fetchedRecipe) {\n          recipe = fetchedRecipe;\n          updateFavoriteButtonStatus(recipe);\n          openModal();\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    });\n  }\n});\n\n// Отримую дані про конкретний рецепт з API по ID\nasync function fetchRecipe(recipeId) {\n  const url = `https://tasty-treats-backend.p.goit.global/api/recipes/${recipeId}`;\n  try {\n    const response = await axios.get(url);\n    const recipe = response.data;\n\n    displayRecipeVideo(recipe);\n    displayRecipeTitle(recipe);\n    displayRecipeDescription(recipe);\n    displayRecipeTimeCooking(recipe);\n    displayRecipeRating(recipe);\n    displayRecipeHashtags(recipe);\n    displayRecipeIngredients(recipe);\n    displayStarRating(recipe);\n    return recipe;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n// Відображаю відео на сторінці\nfunction displayRecipeVideo(recipe) {\n  const recipeVideoIframe = document.querySelector('.recipes-iframe-video');\n  recipeVideoIframe.src = '';\n  const youtubeLink = recipe.youtube;\n  const videoId = getVideoIdFromLink(youtubeLink);\n  recipeVideoIframe.src = `https://www.youtube.com/embed/${videoId}`;\n}\n\n// Функція для отримання ID відео з URL YouTube\nfunction getVideoIdFromLink(link) {\n  const regex =\n    /(?:https?:\\/\\/(?:www\\.)?youtube\\.com\\/watch\\?v=|https?:\\/\\/youtu\\.be\\/)([\\w-]+)/i;\n  const matches = link.match(regex);\n  return matches && matches[1] ? matches[1] : '';\n}\n\n// Функція виведення заголовку\n\nfunction displayRecipeTitle(recipe) {\n  const recipeTitleEl = document.querySelector('.recipes-title');\n  recipeTitleEl.textContent = recipe.title;\n}\n\n//  Функція виведення опису приготування\n\nfunction displayRecipeDescription(recipe) {\n  const recipeTitleEl = document.querySelector('.recipes-description');\n  recipeTitleEl.textContent = recipe.instructions;\n}\n// Функція виведення часу приготування\nfunction displayRecipeTimeCooking(recipe) {\n  const tmeCookingEl = document.querySelector('.recipes-cooking-time');\n  tmeCookingEl.textContent = recipe.time;\n}\n// Функція виведення числового рейтингу\nfunction displayRecipeRating(recipe) {\n  const recipeRatingEl = document.querySelector('.ratinng-value');\n  recipeRatingEl.textContent = recipe.rating;\n}\n\n// Функція виведення хештегів\nfunction displayRecipeHashtags(recipe) {\n  const recipeHashtagsEl = document.querySelector('.recipes-hashtags-list');\n  recipeHashtagsEl.innerHTML = recipe.tags\n    .map(tag => `<li class=\"recipes-hashtags-item\">#${tag}</li>`)\n    .join('');\n}\n\n// Функція виведення інгредіентів\nfunction displayRecipeIngredients(recipe) {\n  const recipeIngredientsEl = document.querySelector(\n    '.recipes-components-list'\n  );\n  recipeIngredientsEl.innerHTML = recipe.ingredients\n    .map(\n      ({ measure, name }) => `\n    <li class=\"recipes-components-item\">\n      <p class=\"recipes-components-item_name\">${name}</p>\n      <p class=\"recipes-components-item_quantity\">${measure}</p>\n    </li>\n  `\n    )\n    .join('');\n}\n\n// Функція зіркового рейтингу залежно від числового\nfunction displayStarRating(recipe) {\n  const ratingValue = parseFloat(recipe.rating);\n  const starElements = document.querySelectorAll('.modal-rating-star-icon');\n\n  for (let i = 0; i < starElements.length; i++) {\n    if (i < ratingValue) {\n      starElements[i].classList.add('active');\n    } else {\n      starElements[i].classList.remove('active');\n    }\n  }\n}\n\n// Додавання/видалення рецептів в localStorage\n\n// Функція для отримання списку обраних рецептів з localStorage\nfunction getFavoriteRecipes() {\n  const favoriteRecipes =\n    JSON.parse(localStorage.getItem('favoriteRecipes')) || [];\n  return favoriteRecipes;\n}\n// Функція для збереження списку обраних рецептів з localStorage\nfunction saveFavoriteRecipes(favoriteRecipes) {\n  localStorage.setItem('favoriteRecipes', JSON.stringify(favoriteRecipes));\n}\n//  Функція для видалення рецепту зі списку обраних рецептів в localStorage\nfunction removeFromFavorites(recipe) {\n  const favoriteRecipes = getFavoriteRecipes();\n  const updatedFavorites = favoriteRecipes.filter(\n    favoriteRecipe => favoriteRecipe.id !== recipe._id\n  );\n\n  saveFavoriteRecipes(updatedFavorites);\n\n  onFavoritesReload();\n}\n\n// Чіпляємося до кнопки \"Add to favorite\"\nconst addToFavoriteButton = document.querySelector('.btn-add-favorite');\n\n// Функція перевірки перебування рецепта в localStorage\nfunction isRecipeInFavorites(recipe) {\n  const favoriteRecipes = getFavoriteRecipes();\n  const isFavorite = favoriteRecipes.some(\n    favoriteRecipe => favoriteRecipe.id === recipe._id\n  );\n\n  return isFavorite;\n}\n// Функція для додавання/видалення обраного рецепту з масиву localStorage\nfunction addToFavorites(recipe) {\n  const favoriteRecipes = getFavoriteRecipes();\n  const { _id, title, category, rating, preview, description } = recipe;\n\n  const newRecipe = { id: _id, title, category, rating, preview, description };\n\n  const isDuplicate = isRecipeInFavorites(recipe);\n  if (!isDuplicate) {\n    favoriteRecipes.push(newRecipe);\n    addToFavoriteButton.textContent = 'Remove from favorite';\n  } else {\n    const updatedFavorites = favoriteRecipes.filter(\n      favoriteRecipe => favoriteRecipe.id !== _id\n    );\n    saveFavoriteRecipes(updatedFavorites);\n    addToFavoriteButton.textContent = 'Add to favorite';\n  }\n  saveFavoriteRecipes(favoriteRecipes);\n}\n\n//  Слухач події для кнопки \"Add to favorite\", який для додавання/видалення обраного рецепту з масиву localStorage\naddToFavoriteButton.addEventListener('click', () => {\n  const isFavorite = isRecipeInFavorites(recipe);\n  if (isFavorite) {\n    removeFromFavorites(recipe);\n    addToFavoriteButton.textContent = 'Add to favorite';\n  } else {\n    addToFavorites(recipe);\n    addToFavoriteButton.textContent = 'Remove from favorite';\n  }\n});\n\n// Функція для оновлення тексту кнопки на \"Add to favorite\" або \"Remove from favorite\" в залежності від статусу\nfunction updateFavoriteButtonStatus(recipe) {\n  const isFavorite = isRecipeInFavorites(recipe);\n  addToFavoriteButton.textContent = isFavorite\n    ? 'Remove from favorite'\n    : 'Add to favorite';\n}\n"],"names":["parcelRequire","$tgDFu","$20e248ed8f18208c$export$2e2bcd8739ae039","recipesListContainer","document","querySelector","categoriesContainer","noFavoritesMessage","paginationElement","getElementById","allButton","categoriesList","renderedRecipesBox","heroImage","$0b90890a1da932c8$export$602bc7b349337fec","key","data","localStorage","getItem","JSON","parse","$d3697e17cd92e465$export$8242f68f012ef212","window","innerWidth","$d3697e17cd92e465$export$56232b55f4742cda","array","chunkSize","groupedChunks","i","length","Math","floor","slice","$fb9GJ","$c545c7fc7fd23f95$export$2e2bcd8739ae039","page1","perPage","totalPages","callback","options","totalItems","itemsPerPage","visiblePages","page","centerAlign","omitMiddlePages","firstItemClassName","lastItemClassName","template","currentPage","moveButton","disabledMoveButton","moreButton","$parcel$interopDefault","on","$4790cd9aedfda2f9$export$4c708a11c3ac73b5","pageSet","$gjiCh","showLoader","style","display","classList","remove","add","objData","Object","keys","listMarkup","map","title","description","preview","rating","id","category","$fT9c6","renderingFavRec","join","innerHTML","hideLoader","$cea7a26fcc5011ce$var$currentBtn","$179aa69f42ac4dcc$export$f20c709553293f6e","$179aa69f42ac4dcc$export$5386e614270b0ccf","target","currentRec","closest","dataset","storageItems","isCategoryLocal","find","el","isCategoryRendered","refs","children","textContent","insertAdjacentHTML","default","$b3d3a0e19b96645d$export$a9fea4fa37525126","categoryMarkup","storage","flatMap","recipe","filter","index","indexOf","reduce","$b3d3a0e19b96645d$var$createCategoryList","$b3d3a0e19b96645d$var$removeFavorite","currentBtn","info","updatedFavorites","setItem","stringify","addEventListener","links","querySelectorAll","contains","event","button","$b3d3a0e19b96645d$var$onClickRemoveFavRec","name","evt","categoryRecipes","Number","nodeName","btn","$cea7a26fcc5011ce$var$toggleActiveClass","markup","$6233dfb0e17f0722$var$scrollToTopBtn","$6233dfb0e17f0722$var$carSection","$6233dfb0e17f0722$var$prevScrollPos","pageYOffset","scrollTo","top","behavior","windowHeight","innerHeight","carSectionHeight","offsetHeight","scrollY","$2shzp","$b7eb322416d19e4b$var$recipe","$b7eb322416d19e4b$var$backdrop","$b7eb322416d19e4b$var$closeButton","$b7eb322416d19e4b$var$modal","$b7eb322416d19e4b$var$openModal","$b7eb322416d19e4b$var$onEscKeyPress","stopPropagation","removeEventListener","$b7eb322416d19e4b$var$closeModal","$b7eb322416d19e4b$var$updateFavoriteButtonStatus","src","async","$b7eb322416d19e4b$var$fetchRecipe","recipeId","url","recipe1","get","recipe2","recipeVideoIframe","videoId","link","regex","matches","match","$b7eb322416d19e4b$var$getVideoIdFromLink","youtube","$b7eb322416d19e4b$var$displayRecipeVideo","recipe3","recipe4","instructions","recipe5","time","recipe6","recipe7","tags","tag","recipe8","ingredients","measure","recipe9","ratingValue","parseFloat","starElements","$b7eb322416d19e4b$var$displayStarRating","error","console","log","$b7eb322416d19e4b$var$getFavoriteRecipes","$b7eb322416d19e4b$var$saveFavoriteRecipes","favoriteRecipes","recipesContainer","popularList","seeRecipeBtn","fetchedRecipe","listItem","$b7eb322416d19e4b$var$addToFavoriteButton","$b7eb322416d19e4b$var$isRecipeInFavorites","recipe11","some","favoriteRecipe","_id","recipe13","isFavorite","recipe10","recipe12","newRecipe","push","$b7eb322416d19e4b$var$addToFavorites"],"version":3,"file":"favorites.b3c1e975.js.map"}