{"mappings":"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","sources":["src/favorites.js","src/js/favorite/favorite-main.js","src/js/favorite/localStorageUtils.js","src/js/favorite/handleCategotyFilter.js","src/js/favorite/utils.js","src/js/favorite/display-favorites.js","src/js/favorite/updateCategoryList.js"],"sourcesContent":["import './js/mobile-menu';\nimport './js/favorite/favorite-main';\n","import RecipeApiService from '../service/service-api';\nimport refs from './constants';\nimport { getFromLocalStorage } from '../favorite/localStorageUtils';\nimport { handleCategoryFilter } from '../favorite/handleCategotyFilter';\nimport { displayFavorites } from '../favorite/display-favorites';\nimport {\n  updateCategoryList,\n  renderCategories,\n} from '../favorite/updateCategoryList';\nimport { showLoader, hideLoader } from '../loader';\n\nconst recipeApiSeriсe = new RecipeApiService();\n\n//\n// Add accent color on load page.\n//\nfunction modifyClassesOnLoad() {\n  const links = document.querySelectorAll('.menu-nav-links');\n\n  if (links[0].classList.contains('header-accent')) {\n    links[0].classList.remove('header-accent');\n\n    if (links.length > 1) {\n      links[1].classList.add('header-accent');\n    }\n  }\n}\n\n// Вызываем функцию при загрузке страницы\nwindow.addEventListener('load', modifyClassesOnLoad);\n\n// ---------------------------------------\n// Imitation adding data to LocalStorage\n// ---------------------------------------\nrecipeApiSeriсe.getRecipe().then(response => {\n  const arr = response.results;\n\n  const FAV_DATA = 'favorites-data';\n  const toStorage = [];\n\n  for (let i = 0; i < 6; i++) {\n    const { _id, title, category, rating, preview, description } = arr[i];\n    for (let j = 0; j < 5; j++) {\n      toStorage.push({\n        _id,\n        title,\n        category,\n        rating,\n        preview,\n        description,\n      });\n    }\n  }\n\n  localStorage.setItem(FAV_DATA, JSON.stringify(toStorage));\n});\n\n/**\n * Refreshes the favorite recipes page.\n * Generates category markup and the \"All categories\" button based on the saved data in localStorage.\n * Then displays the favorite recipes.\n */\nfunction onFavoritesReload() {\n  showLoader();\n\n  const categoryMarkup = createCategoryList();\n  const allCatBtn = `<button class=\"fav-button common-btn is-active\" name=\"main-cat-btn\">All categories</button>`;\n\n  const data = getFromLocalStorage('favorites-data');\n  refs.recipesListContainer.innerHTML = '';\n  refs.categoriesContainer.innerHTML =\n    data && data.length ? `${allCatBtn}${categoryMarkup}` : '';\n\n  displayFavorites();\n\n  hideLoader();\n}\n\n/**\n * Generates the markup for the list of unique categories from favorites data stored in localStorage.\n * {string} The category list markup or an empty string if there is no data.\n */\nfunction createCategoryList() {\n  const storage = localStorage.getItem('favorites-data');\n  const data = JSON.parse(storage);\n\n  if (!data || data.length === 0) return '';\n\n  const uniqueCategories = data\n    .flatMap(recipe => recipe.category)\n    .filter((category, index, array) => array.indexOf(category) === index);\n  return uniqueCategories.reduce(\n    (categoryMarkup, category) => categoryMarkup + renderCategories(category),\n    ''\n  );\n}\n\n/**\n * Removes the favorite recipe from localStorage and reloads the favorites list.\n *  currentBtn - The current button element representing the favorite recipe.\n */\nfunction removeFavorite(currentBtn) {\n  const recipeInfo = JSON.parse(currentBtn.dataset.info);\n  const storage = JSON.parse(localStorage.getItem('favorites-data'));\n  localStorage.setItem(\n    'favorites-data',\n    JSON.stringify(storage.filter(el => el.id !== recipeInfo.id))\n  );\n  onFavoritesReload();\n}\n\n/**\n * Handles the click event on the recipe buttons in the favorites view.\n * event - The click event object.\n */\nfunction handleRecipeButtonEvent({ target }) {\n  if (!target.closest('button')) return;\n  const currentBtn = target.closest('button');\n\n  if (currentBtn.name === 'favorites-data') {\n    removeFavorite(currentBtn);\n    updateCategoryList(target);\n  }\n  if (currentBtn.name === 'details') {\n    console.log('modal here');\n  }\n}\n\n// Add event listeners to the corresponding elements when the DOM is fully loaded.\n\n// Event listener for handling recipe button clicks in the favorites view.\nrefs.renderedRecipesBox.addEventListener('click', handleRecipeButtonEvent);\n\n// Event listener for handling category filter clicks in the favorites view.\nrefs.categoriesList.addEventListener('click', handleCategoryFilter);\n\n// Event listener for reloading the favorites view when the DOM is fully loaded.\ndocument.addEventListener('DOMContentLoaded', onFavoritesReload);\n","export function saveToLocalStorage(key, data) {\n  localStorage.setItem(key, JSON.stringify(data));\n}\n\nexport function getFromLocalStorage(key) {\n  const data = localStorage.getItem(key);\n  return JSON.parse(data);\n}\n","import refs from './constants';\nimport { countPage, groupArrayIntoChunks } from '../favorite/utils';\nimport { renderingFavRec } from '../favorite/rendering-fav';\nimport createPagination from '../favorite/pagination';\nimport { displayFavorites } from '../favorite/display-favorites';\nimport { showLoader, hideLoader } from '../loader';\n\nlet currentBtn = '';\n\n/**\n * Toggles the 'is-active' class on the target element.\n */\nfunction toggleActiveClass({ target }) {\n  const btn = document.querySelector('.is-active');\n  if (!btn) refs.allButton.classList.add('is-active');\n  else btn.classList.remove('is-active');\n  target.classList.add('is-active');\n}\n\n/**\n * Handles the category filter event.\n * {Event} evt - The event object.\n */\nexport function handleCategoryFilter(evt) {\n  showLoader();\n\n  if (evt.target.classList.contains('is-active')) return;\n\n  let data = [];\n  let categoryRecipes;\n  refs.recipesListContainer.innerHTML = '';\n\n  if (evt !== Number(evt) && evt.target.nodeName === 'BUTTON') {\n    toggleActiveClass(evt);\n    currentBtn =\n      evt.target.name === 'main-cat-btn' ? '' : evt.target.textContent;\n  }\n\n  const storage = localStorage.getItem('favorites-data');\n  data = JSON.parse(storage);\n\n  if (!data || data.length === 0) {\n    refs.categoriesContainer.style.display = 'none';\n    return;\n  }\n\n  if (!currentBtn) {\n    displayFavorites();\n    return;\n  }\n\n  categoryRecipes = [...data.filter(recipe => recipe.category === currentBtn)];\n\n  let pageSet = 1;\n\n  if (Number(evt) === evt) pageSet = evt;\n\n  const perPage = countPage();\n  const objData = groupArrayIntoChunks(categoryRecipes, perPage);\n  const totalPages = Object.keys(objData).length;\n\n  refs.paginationElement.style.display = totalPages > 1 ? 'block' : 'none';\n  createPagination(pageSet, perPage, totalPages, displayFavorites);\n\n  const listMarkup = objData[pageSet].reduce(\n    (markup, { title, description, preview, rating, id, category }) =>\n      markup +\n      renderingFavRec(title, description, preview, rating, id, category),\n    ''\n  );\n\n  refs.recipesListContainer.innerHTML = listMarkup;\n\n  hideLoader();\n}\n","// Calculates the number of items per page\nexport function countPage() {\n  return window.innerWidth < 768 ? 9 : 12;\n}\n\n/**\n * Groups an array into chunks of a specified size.\n *\n *  array - The array to be grouped into chunks.\n *  chunkSize - The size of each chunk(Part).\n * {Object} An object containing the grouped chunks, with chunk numbers as keys.\n */\nexport function groupArrayIntoChunks(array, chunkSize) {\n  const groupedChunks = {};\n  for (let i = 0; i < array.length; i += chunkSize) {\n    const chunkNumber = Math.floor(i / chunkSize) + 1;\n    groupedChunks[chunkNumber] = array.slice(i, i + chunkSize);\n  }\n  return groupedChunks;\n}\n","import refs from './constants';\nimport { getFromLocalStorage } from '../favorite/localStorageUtils';\nimport { countPage, groupArrayIntoChunks } from '../favorite/utils';\nimport createPagination from '../favorite/pagination';\nimport { renderingFavRec } from '../favorite/rendering-fav';\nimport { showLoader, hideLoader } from '../loader';\n\nexport function displayFavorites(pageSet = 1) {\n  showLoader();\n\n  const data = getFromLocalStorage('favorites-data');\n\n  // Show or hide the \"All\" button based on whether there is data in localStorage.\n  refs.allButton.style.display = data && data.length ? 'block' : 'none';\n\n  // Display a message and hide the \"All\" button if there is no data in localStorage or the data array is empty.\n  if (!data || data.length === 0) {\n    refs.noFavoritesMessage.classList.remove('visually-hidden');\n    refs.allButton.classList.add('visually-hidden');\n    if (window.innerWidth < 768)\n      refs.heroImage.classList.add('visually-hidden');\n    return;\n  }\n\n  const perPage = countPage();\n  const objData = groupArrayIntoChunks(data, perPage);\n  const totalPages = Object.keys(objData).length;\n\n  refs.paginationElement.style.display = totalPages > 1 ? 'block' : 'none';\n  createPagination(pageSet, perPage, totalPages, displayFavorites);\n\n  const listMarkup = objData[pageSet]\n    .map(({ title, description, preview, rating, id, category }) =>\n      renderingFavRec(title, description, preview, rating, id, category)\n    )\n    .join('');\n\n  refs.recipesListContainer.innerHTML = listMarkup;\n  refs.noFavoritesMessage.classList.add('visually-hidden');\n\n  hideLoader();\n}\n","import { getFromLocalStorage } from '../favorite/localStorageUtils';\nimport { showLoader, hideLoader } from '../loader';\n\n/**\n * Generates the markup for a category button.\n * {string} category - The category name.\n * return {string} The category button markup.\n */\nexport function renderCategories(category) {\n  return `<button class=\"fav-button\">${category}</button>`;\n}\n\n/**\n * Updates the category list in the favorites view based on the selected recipe's category.\n *  target - The target element representing the selected recipe.\n */\nexport function updateCategoryList(target) {\n  showLoader();\n\n  const currentRec = target.closest('div.recipe-item').dataset.category;\n  const storageItems = getFromLocalStorage('favorites-data');\n  const isCategoryLocal = storageItems.find(el => el.category === currentRec);\n  const isCategoryRendered = [...refs.categoriesContainer.children].find(\n    el => el.textContent === currentRec\n  );\n\n  if (!isCategoryLocal && isCategoryRendered) isCategoryRendered.remove();\n  else if (isCategoryLocal && !isCategoryRendered)\n    refs.categoriesContainer.insertAdjacentHTML(\n      'beforeend',\n      renderCategories(currentRec)\n    );\n\n  refs.allButton.style.display =\n    storageItems && storageItems.length ? 'block' : 'none';\n\n  hideLoader();\n}\n"],"names":["parcelRequire","$tgDFu","$0b90890a1da932c8$export$602bc7b349337fec","key","data","localStorage","getItem","JSON","parse","$d3697e17cd92e465$export$8242f68f012ef212","window","innerWidth","$d3697e17cd92e465$export$56232b55f4742cda","array","chunkSize","groupedChunks","i","length","Math","floor","slice","$2P2v9","$4790cd9aedfda2f9$export$4c708a11c3ac73b5","pageSet","$gjiCh","showLoader","default","allButton","style","display","noFavoritesMessage","classList","remove","add","heroImage","perPage","objData","totalPages","Object","keys","paginationElement","$gW4Nf","listMarkup","map","title","description","preview","rating","id","category","$fT9c6","renderingFavRec","join","recipesListContainer","innerHTML","hideLoader","$cea7a26fcc5011ce$var$currentBtn","$179aa69f42ac4dcc$export$f20c709553293f6e","$179aa69f42ac4dcc$export$5386e614270b0ccf","target","currentRec","closest","dataset","storageItems","isCategoryLocal","find","el","isCategoryRendered","refs","categoriesContainer","children","textContent","insertAdjacentHTML","$b3d3a0e19b96645d$var$onFavoritesReload","categoryMarkup","storage","flatMap","recipe","filter","index","indexOf","reduce","$b3d3a0e19b96645d$var$createCategoryList","addEventListener","links","document","querySelectorAll","contains","getRecipe","then","response","arr","results","toStorage","_id","j","push","setItem","stringify","renderedRecipesBox","currentBtn","name","recipeInfo","info","$b3d3a0e19b96645d$var$removeFavorite","console","log","categoriesList","evt","categoryRecipes","Number","nodeName","btn","querySelector","$cea7a26fcc5011ce$var$toggleActiveClass","markup"],"version":3,"file":"favorites.2dc27aa2.js.map"}