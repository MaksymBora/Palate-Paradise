{"mappings":"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","sources":["src/favorites.js","src/js/favorite/favorite-main.js","src/js/favorite/constants.js","src/js/favorite/localStorageUtils.js","src/js/favorite/handleCategotyFilter.js","src/js/favorite/utils.js","src/js/favorite/display-favorites.js","src/js/favorite/updateCategoryList.js","src/js/utils/favorits-scroll.js","src/js/favorite/modal-fav.js"],"sourcesContent":["import './js/utils/mobile-menu';\nimport './js/favorite/favorite-main';\nimport './js/cart/cart';\nimport './js/utils/favorits-scroll';\nimport './js/favorite/modal-fav';\nimport './js/modals/open-rating';\nimport './js/utils/theme-switch';\n","import RecipeApiService from '../service/service-api';\nimport refs from './constants';\nimport { getFromLocalStorage } from '../favorite/localStorageUtils';\nimport { handleCategoryFilter } from '../favorite/handleCategotyFilter';\nimport { displayFavorites } from '../favorite/display-favorites';\nimport {\n  updateCategoryList,\n  renderCategories,\n} from '../favorite/updateCategoryList';\nimport { showLoader, hideLoader } from '../utils/loader';\n\nconst recipeApiSeriсe = new RecipeApiService();\n\n//\n// Add accent color on load page.\n//\nfunction modifyClassesOnLoad() {\n  const links = document.querySelectorAll('.menu-nav-links');\n\n  if (links[0].classList.contains('header-accent')) {\n    links[0].classList.remove('header-accent');\n\n    if (links.length > 1) {\n      links[1].classList.add('header-accent');\n    }\n  }\n}\n\n// Вызываем функцию при загрузке страницы\nwindow.addEventListener('load', modifyClassesOnLoad);\n\nexport function onFavoritesReload() {\n  showLoader();\n\n  const categoryMarkup = createCategoryList();\n  const allCatBtn = `<button class=\"fav-button common-btn is-active\" name=\"main-cat-btn\">All categories</button>`;\n\n  const data = getFromLocalStorage('favoriteRecipes');\n  refs.recipesListContainer.innerHTML = '';\n  refs.categoriesContainer.innerHTML =\n    data && data.length ? `${allCatBtn}${categoryMarkup}` : '';\n\n  displayFavorites();\n\n  hideLoader();\n}\n\n/**\n * Generates the markup for the list of unique categories from favorites data stored in localStorage.\n * {string} The category list markup or an empty string if there is no data.\n */\nfunction createCategoryList() {\n  const storage = localStorage.getItem('favoriteRecipes');\n  const data = JSON.parse(storage);\n\n  if (!data || data.length === 0) return '';\n\n  const uniqueCategories = data\n    .flatMap(recipe => recipe.category)\n    .filter((category, index, array) => array.indexOf(category) === index);\n  return uniqueCategories.reduce(\n    (categoryMarkup, category) => categoryMarkup + renderCategories(category),\n    ''\n  );\n}\n\n// ========================== //\n// Remove from Favourite\n// ========================== //\n\ndocument.addEventListener('click', function (event) {\n  const button = event.target.closest('.heart-btn');\n  if (button) {\n    onClickRemoveFavRec(event);\n  }\n});\n\nfunction onClickRemoveFavRec(event) {\n  const button = event.target;\n\n  // Вызываем функцию удаления избранного рецепта\n  removeFavorite(button);\n\n  // Удаляем класс \"active\" (если он присутствует)\n  button.classList.remove('active');\n}\n\n/**\n * Removes the favorite recipe from localStorage and reloads the favorites list.\n *  currentBtn - The current button element representing the favorite recipe.\n */\nfunction removeFavorite(currentBtn) {\n  // Получаем значение data-info (id) для текущей кнопки\n  const id = currentBtn.dataset.info;\n\n  // Получаем из localStorage данные\n  const favoriteRecipes =\n    JSON.parse(localStorage.getItem('favoriteRecipes')) || [];\n\n  // Фильтруем массив, удаляя объект с указанным id\n  const updatedFavorites = favoriteRecipes.filter(recipe => recipe.id !== id);\n\n  // Обновляем данные в localStorage\n  localStorage.setItem('favoriteRecipes', JSON.stringify(updatedFavorites));\n\n  // Перезагружаем список избранных рецептов\n  onFavoritesReload();\n}\n\n/**\n * Handles the click event on the recipe buttons in the favorites view.\n * event - The click event object.\n */\nfunction handleRecipeButtonEvent({ target }) {\n  if (!target.closest('button')) return;\n  const currentBtn = target.closest('button');\n\n  if (currentBtn.name === 'favoriteRecipes') {\n    removeFavorite(currentBtn);\n    updateCategoryList(target);\n  }\n}\n\n// Add event listeners to the corresponding elements when the DOM is fully loaded.\n\n// Event listener for handling recipe button clicks in the favorites view.\nrefs.renderedRecipesBox.addEventListener('click', handleRecipeButtonEvent);\n\n// Event listener for handling category filter clicks in the favorites view.\nrefs.categoriesList.addEventListener('click', handleCategoryFilter);\n\n// Event listener for reloading the favorites view when the DOM is fully loaded.\ndocument.addEventListener('DOMContentLoaded', onFavoritesReload);\n","const refs = {\n  recipesListContainer: document.querySelector('.fav-list'),\n  categoriesContainer: document.querySelector('.fav-categories'),\n  noFavoritesMessage: document.querySelector('.fav-empty'),\n  paginationElement: document.getElementById('pagination'),\n  allButton: document.querySelector('.common-btn'),\n  categoriesList: document.querySelector('.fav-categories'),\n  renderedRecipesBox: document.getElementById('fav-rendered-card'),\n  heroImage: document.querySelector('.fav-hero'),\n};\n\nexport default refs;\n","export function saveToLocalStorage(key, data) {\n  localStorage.setItem(key, JSON.stringify(data));\n}\n\nexport function getFromLocalStorage(key) {\n  const data = localStorage.getItem(key);\n  return JSON.parse(data);\n}\n","import refs from './constants';\nimport { countPage, groupArrayIntoChunks } from '../favorite/utils';\nimport { renderingFavRec } from '../favorite/rendering-fav';\nimport createPagination from '../favorite/pagination';\nimport { displayFavorites } from '../favorite/display-favorites';\nimport { showLoader, hideLoader } from '../utils/loader';\n\nlet currentBtn = '';\n\n/**\n * Toggles the 'is-active' class on the target element.\n */\nfunction toggleActiveClass({ target }) {\n  const btn = document.querySelector('.is-active');\n  if (!btn) refs.allButton.classList.add('is-active');\n  else btn.classList.remove('is-active');\n  target.classList.add('is-active');\n}\n\n/**\n * Handles the category filter event.\n * {Event} evt - The event object.\n */\nexport function handleCategoryFilter(evt) {\n  showLoader();\n\n  if (evt.target.classList.contains('is-active')) return;\n\n  let data = [];\n  let categoryRecipes;\n  refs.recipesListContainer.innerHTML = '';\n\n  if (evt !== Number(evt) && evt.target.nodeName === 'BUTTON') {\n    toggleActiveClass(evt);\n    currentBtn =\n      evt.target.name === 'main-cat-btn' ? '' : evt.target.textContent;\n  }\n\n  const storage = localStorage.getItem('favoriteRecipes');\n  data = JSON.parse(storage);\n\n  if (!data || data.length === 0) {\n    refs.categoriesContainer.style.display = 'none';\n    return;\n  }\n\n  if (!currentBtn) {\n    displayFavorites();\n    return;\n  }\n\n  categoryRecipes = [...data.filter(recipe => recipe.category === currentBtn)];\n\n  let pageSet = 1;\n\n  if (Number(evt) === evt) pageSet = evt;\n\n  const perPage = countPage();\n  const objData = groupArrayIntoChunks(categoryRecipes, perPage);\n  const totalPages = Object.keys(objData).length;\n\n  refs.paginationElement.style.display = totalPages > 1 ? 'block' : 'none';\n  createPagination(pageSet, perPage, totalPages, displayFavorites);\n\n  const listMarkup = objData[pageSet].reduce(\n    (markup, { title, description, preview, rating, id, category }) =>\n      markup +\n      renderingFavRec(title, description, preview, rating, id, category),\n    ''\n  );\n\n  refs.recipesListContainer.innerHTML = listMarkup;\n\n  hideLoader();\n}\n","// Calculates the number of items per page\nexport function countPage() {\n  return window.innerWidth < 768 ? 9 : 12;\n}\n\n/**\n * Groups an array into chunks of a specified size.\n *\n *  array - The array to be grouped into chunks.\n *  chunkSize - The size of each chunk(Part).\n * {Object} An object containing the grouped chunks, with chunk numbers as keys.\n */\nexport function groupArrayIntoChunks(array, chunkSize) {\n  const groupedChunks = {};\n  for (let i = 0; i < array.length; i += chunkSize) {\n    const chunkNumber = Math.floor(i / chunkSize) + 1;\n    groupedChunks[chunkNumber] = array.slice(i, i + chunkSize);\n  }\n  return groupedChunks;\n}\n","import refs from './constants';\nimport { getFromLocalStorage } from '../favorite/localStorageUtils';\nimport { countPage, groupArrayIntoChunks } from '../favorite/utils';\nimport createPagination from '../favorite/pagination';\nimport { renderingFavRec } from '../favorite/rendering-fav';\nimport { showLoader, hideLoader } from '../utils/loader';\n\nexport function displayFavorites(pageSet = 1) {\n  showLoader();\n\n  const data = getFromLocalStorage('favoriteRecipes');\n\n  // Show or hide the \"All\" button based on whether there is data in localStorage.\n  refs.allButton.style.display = data && data.length ? 'block' : 'none';\n\n  // Display a message and hide the \"All\" button if there is no data in localStorage or the data array is empty.\n  if (!data || data.length === 0) {\n    refs.noFavoritesMessage.classList.remove('visually-hidden');\n    refs.allButton.classList.add('visually-hidden');\n    if (window.innerWidth < 768)\n      refs.heroImage.classList.add('visually-hidden');\n    return;\n  }\n\n  const perPage = countPage();\n  const objData = groupArrayIntoChunks(data, perPage);\n  const totalPages = Object.keys(objData).length;\n\n  refs.paginationElement.style.display = totalPages > 1 ? 'block' : 'none';\n  createPagination(pageSet, perPage, totalPages, displayFavorites);\n\n  const listMarkup = objData[pageSet]\n    .map(({ title, description, thumb, rating, id, category }) =>\n      renderingFavRec(title, description, thumb, rating, id, category)\n    )\n    .join('');\n\n  refs.recipesListContainer.innerHTML = listMarkup;\n  refs.noFavoritesMessage.classList.add('visually-hidden');\n\n  hideLoader();\n}\n","import { getFromLocalStorage } from '../favorite/localStorageUtils';\nimport { showLoader, hideLoader } from '../utils/loader';\n\n/**\n * Generates the markup for a category button.\n * {string} category - The category name.\n * return {string} The category button markup.\n */\nexport function renderCategories(category) {\n  return `<button class=\"fav-button\">${category}</button>`;\n}\n\n/**\n * Updates the category list in the favorites view based on the selected recipe's category.\n *  target - The target element representing the selected recipe.\n */\nexport function updateCategoryList(target) {\n  showLoader();\n\n  const currentRec = target.closest('div.recipe-item').dataset.category;\n  const storageItems = getFromLocalStorage('favoriteRecipes');\n  const isCategoryLocal = storageItems.find(el => el.category === currentRec);\n  const isCategoryRendered = [...refs.categoriesContainer.children].find(\n    el => el.textContent === currentRec\n  );\n\n  if (!isCategoryLocal && isCategoryRendered) isCategoryRendered.remove();\n  else if (isCategoryLocal && !isCategoryRendered)\n    refs.categoriesContainer.insertAdjacentHTML(\n      'beforeend',\n      renderCategories(currentRec)\n    );\n\n  refs.allButton.style.display =\n    storageItems && storageItems.length ? 'block' : 'none';\n\n  hideLoader();\n}\n","const scrollToTopBtn = document.querySelector('.scroll-to-top');\nconst carSection = document.querySelector('.fav-list');\nlet prevScrollPos = window.pageYOffset;\n\nfunction scrollToTop() {\n  window.scrollTo({\n    top: 0,\n    behavior: 'smooth',\n  });\n  scrollToTopBtn.style.display = 'none';\n}\n\nfunction scrollToTopButtonVisibility() {\n  const windowHeight = window.innerHeight;\n  const carSectionHeight = carSection.offsetHeight;\n  const scrollY = window.scrollY;\n\n  if (scrollY <= prevScrollPos || scrollY + windowHeight >= carSectionHeight) {\n    scrollToTopBtn.style.display = 'block';\n  } else {\n    scrollToTopBtn.style.display = 'none';\n  }\n\n  if (scrollY === 0 || scrollY > prevScrollPos) {\n    scrollToTopBtn.style.display = 'none';\n  }\n\n  prevScrollPos = scrollY;\n}\n\nscrollToTopBtn.addEventListener('click', scrollToTop);\nwindow.addEventListener('scroll', scrollToTopButtonVisibility);\n","import axios from 'axios';\n\nimport { onFavoritesReload } from './favorite-main';\nlet recipe;\nconst backdrop = document.querySelector('.backdrop-recipes');\nconst closeButton = document.querySelector('.modal-close-btn');\nconst modal = document.querySelector('.modal-recipes');\n\ncloseButton.addEventListener('click', closeModal);\ndocument.addEventListener('keydown', onEscKeyPress);\n\nbackdrop.addEventListener('click', event => {\n  if (event.target !== modal && !modal.contains(event.target)) {\n    closeModal();\n  }\n});\n\n// Відкриття модального вікна\nfunction openModal() {\n  if (modal) {\n    modal.classList.remove('is-hidden');\n    backdrop.classList.remove('is-hidden');\n    document.addEventListener('keydown', onEscKeyPress);\n\n    modal.addEventListener('click', event => {\n      event.stopPropagation();\n    });\n\n    backdrop.removeEventListener('click', closeModal);\n    backdrop.addEventListener('click', closeModal);\n\n    updateFavoriteButtonStatus(recipe);\n  }\n}\n\n// Закриття модального вікна:\nfunction closeModal() {\n  if (modal) {\n    const recipeVideoIframe = document.querySelector('.recipes-iframe-video');\n    recipeVideoIframe.src = '';\n    modal.classList.add('is-hidden');\n    document.removeEventListener('keydown', onEscKeyPress);\n    backdrop.removeEventListener('click', closeModal);\n    backdrop.classList.add('is-hidden');\n  }\n}\n\nfunction onEscKeyPress(event) {\n  if (event.key === 'Escape') {\n    closeModal();\n  }\n}\n\nbackdrop.addEventListener('click', event => {\n  if (event.target === backdrop) {\n    closeModal();\n  }\n});\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const recipesContainer = document.querySelector('.image-container');\n  const popularList = document.querySelector('.popular-list');\n\n  // Event listener for '.rec-btn-open' buttons\n  recipesContainer.addEventListener('click', async event => {\n    const seeRecipeBtn = event.target.closest('.rec-btn-open');\n    if (!seeRecipeBtn) return;\n\n    const recipeId = seeRecipeBtn.dataset.id;\n    try {\n      const fetchedRecipe = await fetchRecipe(recipeId);\n      if (fetchedRecipe) {\n        recipe = fetchedRecipe;\n        updateFavoriteButtonStatus(recipe);\n        openModal();\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  });\n\n  // Event listener for <li> elements inside '.popular-list'\n  if (popularList) {\n    // Event listener for <li> elements inside '.popular-list'\n    popularList.addEventListener('click', async event => {\n      const listItem = event.target.closest('.popular-list-item');\n      if (!listItem) return;\n\n      const recipeId = listItem.dataset.id;\n      try {\n        const fetchedRecipe = await fetchRecipe(recipeId);\n        if (fetchedRecipe) {\n          recipe = fetchedRecipe;\n          updateFavoriteButtonStatus(recipe);\n          openModal();\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    });\n  }\n});\n\n// Отримую дані про конкретний рецепт з API по ID\nasync function fetchRecipe(recipeId) {\n  const url = `https://tasty-treats-backend.p.goit.global/api/recipes/${recipeId}`;\n  try {\n    const response = await axios.get(url);\n    const recipe = response.data;\n\n    displayRecipeVideo(recipe);\n    displayRecipeTitle(recipe);\n    displayRecipeDescription(recipe);\n    displayRecipeTimeCooking(recipe);\n    displayRecipeRating(recipe);\n    displayRecipeHashtags(recipe);\n    displayRecipeIngredients(recipe);\n    displayStarRating(recipe);\n    return recipe;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n// Відображаю відео на сторінці\nfunction displayRecipeVideo(recipe) {\n  const recipeVideoIframe = document.querySelector('.recipes-iframe-video');\n  recipeVideoIframe.src = '';\n  const youtubeLink = recipe.youtube;\n  const videoId = getVideoIdFromLink(youtubeLink);\n  recipeVideoIframe.src = `https://www.youtube.com/embed/${videoId}`;\n}\n\n// Функція для отримання ID відео з URL YouTube\nfunction getVideoIdFromLink(link) {\n  const regex =\n    /(?:https?:\\/\\/(?:www\\.)?youtube\\.com\\/watch\\?v=|https?:\\/\\/youtu\\.be\\/)([\\w-]+)/i;\n  const matches = link.match(regex);\n  return matches && matches[1] ? matches[1] : '';\n}\n\n// Функція виведення заголовку\n\nfunction displayRecipeTitle(recipe) {\n  const recipeTitleEl = document.querySelector('.recipes-title');\n  recipeTitleEl.textContent = recipe.title;\n}\n\n//  Функція виведення опису приготування\n\nfunction displayRecipeDescription(recipe) {\n  const recipeTitleEl = document.querySelector('.recipes-description');\n  recipeTitleEl.textContent = recipe.instructions;\n}\n// Функція виведення часу приготування\nfunction displayRecipeTimeCooking(recipe) {\n  const tmeCookingEl = document.querySelector('.recipes-cooking-time');\n  tmeCookingEl.textContent = recipe.time;\n}\n// Функція виведення числового рейтингу\nfunction displayRecipeRating(recipe) {\n  const recipeRatingEl = document.querySelector('.ratinng-value');\n  recipeRatingEl.textContent = recipe.rating;\n}\n\n// Функція виведення хештегів\nfunction displayRecipeHashtags(recipe) {\n  const recipeHashtagsEl = document.querySelector('.recipes-hashtags-list');\n  recipeHashtagsEl.innerHTML = recipe.tags\n    .map(tag => `<li class=\"recipes-hashtags-item\">#${tag}</li>`)\n    .join('');\n}\n\n// Функція виведення інгредіентів\nfunction displayRecipeIngredients(recipe) {\n  const recipeIngredientsEl = document.querySelector(\n    '.recipes-components-list'\n  );\n  recipeIngredientsEl.innerHTML = recipe.ingredients\n    .map(\n      ({ measure, name }) => `\n    <li class=\"recipes-components-item\">\n      <p class=\"recipes-components-item_name\">${name}</p>\n      <p class=\"recipes-components-item_quantity\">${measure}</p>\n    </li>\n  `\n    )\n    .join('');\n}\n\n// Функція зіркового рейтингу залежно від числового\nfunction displayStarRating(recipe) {\n  const ratingValue = parseFloat(recipe.rating);\n  const starElements = document.querySelectorAll('.modal-rating-star-icon');\n\n  for (let i = 0; i < starElements.length; i++) {\n    if (i < ratingValue) {\n      starElements[i].classList.add('active');\n    } else {\n      starElements[i].classList.remove('active');\n    }\n  }\n}\n\n// Додавання/видалення рецептів в localStorage\n\n// Функція для отримання списку обраних рецептів з localStorage\nfunction getFavoriteRecipes() {\n  const favoriteRecipes =\n    JSON.parse(localStorage.getItem('favoriteRecipes')) || [];\n  return favoriteRecipes;\n}\n// Функція для збереження списку обраних рецептів з localStorage\nfunction saveFavoriteRecipes(favoriteRecipes) {\n  localStorage.setItem('favoriteRecipes', JSON.stringify(favoriteRecipes));\n}\n//  Функція для видалення рецепту зі списку обраних рецептів в localStorage\nfunction removeFromFavorites(recipe) {\n  const favoriteRecipes = getFavoriteRecipes();\n  const updatedFavorites = favoriteRecipes.filter(\n    favoriteRecipe => favoriteRecipe.id !== recipe._id\n  );\n\n  saveFavoriteRecipes(updatedFavorites);\n\n  onFavoritesReload();\n}\n\n// Чіпляємося до кнопки \"Add to favorite\"\nconst addToFavoriteButton = document.querySelector('.btn-add-favorite');\n\n// Функція перевірки перебування рецепта в localStorage\nfunction isRecipeInFavorites(recipe) {\n  const favoriteRecipes = getFavoriteRecipes();\n  const isFavorite = favoriteRecipes.some(\n    favoriteRecipe => favoriteRecipe.id === recipe._id\n  );\n\n  return isFavorite;\n}\n// Функція для додавання/видалення обраного рецепту з масиву localStorage\nfunction addToFavorites(recipe) {\n  const favoriteRecipes = getFavoriteRecipes();\n  const { _id, title, category, rating, preview, description } = recipe;\n\n  const newRecipe = { id: _id, title, category, rating, preview, description };\n\n  const isDuplicate = isRecipeInFavorites(recipe);\n  if (!isDuplicate) {\n    favoriteRecipes.push(newRecipe);\n    addToFavoriteButton.textContent = 'Remove from favorite';\n  } else {\n    const updatedFavorites = favoriteRecipes.filter(\n      favoriteRecipe => favoriteRecipe.id !== _id\n    );\n    saveFavoriteRecipes(updatedFavorites);\n    addToFavoriteButton.textContent = 'Add to favorite';\n  }\n  saveFavoriteRecipes(favoriteRecipes);\n}\n\n//  Слухач події для кнопки \"Add to favorite\", який для додавання/видалення обраного рецепту з масиву localStorage\naddToFavoriteButton.addEventListener('click', () => {\n  const isFavorite = isRecipeInFavorites(recipe);\n  if (isFavorite) {\n    removeFromFavorites(recipe);\n    addToFavoriteButton.textContent = 'Add to favorite';\n  } else {\n    addToFavorites(recipe);\n    addToFavoriteButton.textContent = 'Remove from favorite';\n  }\n});\n\n// Функція для оновлення тексту кнопки на \"Add to favorite\" або \"Remove from favorite\" в залежності від статусу\nfunction updateFavoriteButtonStatus(recipe) {\n  const isFavorite = isRecipeInFavorites(recipe);\n  addToFavoriteButton.textContent = isFavorite\n    ? 'Remove from favorite'\n    : 'Add to favorite';\n}\n"],"names":["parcelRequire","$d3Gjh","$456b4efabf03b523$export$2e2bcd8739ae039","recipesListContainer","document","querySelector","categoriesContainer","noFavoritesMessage","paginationElement","getElementById","allButton","categoriesList","renderedRecipesBox","heroImage","$3a34280a53c04ab7$export$602bc7b349337fec","key","data","localStorage","getItem","JSON","parse","$8nrFW","$319ca2c7fb7e9c69$export$8242f68f012ef212","window","innerWidth","$319ca2c7fb7e9c69$export$56232b55f4742cda","array","chunkSize","groupedChunks","i","length","Math","floor","slice","$13da8db5e898e272$export$4c708a11c3ac73b5","pageSet","arguments","$8dpKU","showLoader","style","display","classList","remove","add","perPage","objData","totalPages","Object","keys","$au4Ux","default","listMarkup","map","param","title","description","thumb","rating","id","category","$2lkGM","renderingFavRec","join","innerHTML","hideLoader","$f1ec916d23661196$var$currentBtn","$c03df47b46ce8e4c$export$f20c709553293f6e","concat","$c03df47b46ce8e4c$export$5386e614270b0ccf","target","currentRec","closest","dataset","storageItems","isCategoryLocal","find","el","isCategoryRendered","$parcel$interopDefault","refs","children","textContent","insertAdjacentHTML","$b60f03cd1e1dbfd2$export$a9fea4fa37525126","categoryMarkup","storage","flatMap","recipe","filter","index","indexOf","reduce","$b60f03cd1e1dbfd2$var$createCategoryList","$b60f03cd1e1dbfd2$var$removeFavorite","currentBtn","info","updatedFavorites","setItem","stringify","addEventListener","links","querySelectorAll","contains","event","button","$b60f03cd1e1dbfd2$var$onClickRemoveFavRec","name","evt","categoryRecipes","btn","Number","nodeName","markup","preview","$49f795ad5abbd60c$var$scrollToTopBtn","$49f795ad5abbd60c$var$carSection","$49f795ad5abbd60c$var$prevScrollPos","pageYOffset","scrollTo","top","behavior","windowHeight","innerHeight","carSectionHeight","offsetHeight","scrollY","$ab570245f7672972$var$recipe","$bpxeT","$ab570245f7672972$var$backdrop","$ab570245f7672972$var$closeButton","$ab570245f7672972$var$modal","$ab570245f7672972$var$openModal","$ab570245f7672972$var$onEscKeyPress","stopPropagation","removeEventListener","$ab570245f7672972$var$closeModal","$ab570245f7672972$var$updateFavoriteButtonStatus","src","$ab570245f7672972$var$fetchRecipe","recipeId","$ab570245f7672972$var$_fetchRecipe","apply","this","$2TvXO","mark","_callee","url","response","recipe1","$dIxxU","get","_ctx","sent","$ab570245f7672972$var$displayRecipeVideo","$ab570245f7672972$var$displayRecipeTitle","$ab570245f7672972$var$displayRecipeDescription","$ab570245f7672972$var$displayRecipeTimeCooking","$ab570245f7672972$var$displayRecipeRating","$ab570245f7672972$var$displayRecipeHashtags","$ab570245f7672972$var$displayRecipeIngredients","$ab570245f7672972$var$displayStarRating","console","log","t0","recipe2","recipeVideoIframe","regex","matches","youtubeLink","youtube","videoId","match","recipe3","recipe4","instructions","recipe5","time","recipe6","recipe7","tags","tag","recipe8","ingredients","measure","recipe9","ratingValue","parseFloat","starElements","$ab570245f7672972$var$getFavoriteRecipes","$ab570245f7672972$var$saveFavoriteRecipes","favoriteRecipes","recipesContainer","popularList","seeRecipeBtn","fetchedRecipe","listItem","$ab570245f7672972$var$addToFavoriteButton","$ab570245f7672972$var$isRecipeInFavorites","recipe11","some","favoriteRecipe","_id","recipe13","isFavorite","recipe12","newRecipe","recipe10","push"],"version":3,"file":"favorites.1477b47d.js.map"}