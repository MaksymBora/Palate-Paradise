{"mappings":"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","sources":["src/favorites.js","src/js/favorite/favorite-main.js","src/js/favorite/constants.js","src/js/favorite/localStorageUtils.js","src/js/favorite/utils.js","src/js/favorite/pagination.js","src/js/favorite/display-favorites.js","src/js/favorite/handleCategotyFilter.js","src/js/favorite/updateCategoryList.js","src/js/favorits-scroll.js"],"sourcesContent":["import './js/mobile-menu';\nimport './js/favorite/favorite-main';\n\nimport './js/cart/cart';\n\nimport './js/favorits-scroll';\n\n","import RecipeApiService from '../service/service-api';\nimport refs from './constants';\nimport { getFromLocalStorage } from '../favorite/localStorageUtils';\nimport { handleCategoryFilter } from '../favorite/handleCategotyFilter';\nimport { displayFavorites } from '../favorite/display-favorites';\nimport {\n  updateCategoryList,\n  renderCategories,\n} from '../favorite/updateCategoryList';\nimport { showLoader, hideLoader } from '../loader';\n\nconst recipeApiSeriсe = new RecipeApiService();\n\n//\n// Add accent color on load page.\n//\nfunction modifyClassesOnLoad() {\n  const links = document.querySelectorAll('.menu-nav-links');\n\n  if (links[0].classList.contains('header-accent')) {\n    links[0].classList.remove('header-accent');\n\n    if (links.length > 1) {\n      links[1].classList.add('header-accent');\n    }\n  }\n}\n\n// Вызываем функцию при загрузке страницы\nwindow.addEventListener('load', modifyClassesOnLoad);\n\n// ---------------------------------------\n// Imitation adding data to LocalStorage\n// ---------------------------------------\nrecipeApiSeriсe.getRecipe().then(response => {\n  const arr = response.results;\n\n  const FAV_DATA = 'favorites-data';\n  const toStorage = [];\n\n  for (let i = 0; i < 6; i++) {\n    const { _id, title, category, rating, preview, description } = arr[i];\n    for (let j = 0; j < 5; j++) {\n      toStorage.push({\n        _id,\n        title,\n        category,\n        rating,\n        preview,\n        description,\n      });\n    }\n  }\n\n  localStorage.setItem(FAV_DATA, JSON.stringify(toStorage));\n});\n\n/**\n * Refreshes the favorite recipes page.\n * Generates category markup and the \"All categories\" button based on the saved data in localStorage.\n * Then displays the favorite recipes.\n */\nfunction onFavoritesReload() {\n  showLoader();\n\n  const categoryMarkup = createCategoryList();\n  const allCatBtn = `<button class=\"fav-button common-btn is-active\" name=\"main-cat-btn\">All categories</button>`;\n\n  const data = getFromLocalStorage('favorites-data');\n  refs.recipesListContainer.innerHTML = '';\n  refs.categoriesContainer.innerHTML =\n    data && data.length ? `${allCatBtn}${categoryMarkup}` : '';\n\n  displayFavorites();\n\n  hideLoader();\n}\n\n/**\n * Generates the markup for the list of unique categories from favorites data stored in localStorage.\n * {string} The category list markup or an empty string if there is no data.\n */\nfunction createCategoryList() {\n  const storage = localStorage.getItem('favorites-data');\n  const data = JSON.parse(storage);\n\n  if (!data || data.length === 0) return '';\n\n  const uniqueCategories = data\n    .flatMap(recipe => recipe.category)\n    .filter((category, index, array) => array.indexOf(category) === index);\n  return uniqueCategories.reduce(\n    (categoryMarkup, category) => categoryMarkup + renderCategories(category),\n    ''\n  );\n}\n\n/**\n * Removes the favorite recipe from localStorage and reloads the favorites list.\n *  currentBtn - The current button element representing the favorite recipe.\n */\nfunction removeFavorite(currentBtn) {\n  const recipeInfo = JSON.parse(currentBtn.dataset.info);\n  const storage = JSON.parse(localStorage.getItem('favorites-data'));\n  localStorage.setItem(\n    'favorites-data',\n    JSON.stringify(storage.filter(el => el.id !== recipeInfo.id))\n  );\n  onFavoritesReload();\n}\n\n/**\n * Handles the click event on the recipe buttons in the favorites view.\n * event - The click event object.\n */\nfunction handleRecipeButtonEvent({ target }) {\n  if (!target.closest('button')) return;\n  const currentBtn = target.closest('button');\n\n  if (currentBtn.name === 'favorites-data') {\n    removeFavorite(currentBtn);\n    updateCategoryList(target);\n  }\n  if (currentBtn.name === 'details') {\n    console.log('modal here');\n  }\n}\n\n// Add event listeners to the corresponding elements when the DOM is fully loaded.\n\n// Event listener for handling recipe button clicks in the favorites view.\nrefs.renderedRecipesBox.addEventListener('click', handleRecipeButtonEvent);\n\n// Event listener for handling category filter clicks in the favorites view.\nrefs.categoriesList.addEventListener('click', handleCategoryFilter);\n\n// Event listener for reloading the favorites view when the DOM is fully loaded.\ndocument.addEventListener('DOMContentLoaded', onFavoritesReload);\n","const refs = {\n  recipesListContainer: document.querySelector('.fav-list'),\n  categoriesContainer: document.querySelector('.fav-categories'),\n  noFavoritesMessage: document.querySelector('.fav-empty'),\n  paginationElement: document.getElementById('pagination'),\n  allButton: document.querySelector('.common-btn'),\n  categoriesList: document.querySelector('.fav-categories'),\n  renderedRecipesBox: document.getElementById('fav-rendered-card'),\n  heroImage: document.querySelector('.fav-hero'),\n};\n\nexport default refs;\n","export function saveToLocalStorage(key, data) {\n  localStorage.setItem(key, JSON.stringify(data));\n}\n\nexport function getFromLocalStorage(key) {\n  const data = localStorage.getItem(key);\n  return JSON.parse(data);\n}\n","// Calculates the number of items per page\nexport function countPage() {\n  return window.innerWidth < 768 ? 9 : 12;\n}\n\n/**\n * Groups an array into chunks of a specified size.\n *\n *  array - The array to be grouped into chunks.\n *  chunkSize - The size of each chunk(Part).\n * {Object} An object containing the grouped chunks, with chunk numbers as keys.\n */\nexport function groupArrayIntoChunks(array, chunkSize) {\n  const groupedChunks = {};\n  for (let i = 0; i < array.length; i += chunkSize) {\n    const chunkNumber = Math.floor(i / chunkSize) + 1;\n    groupedChunks[chunkNumber] = array.slice(i, i + chunkSize);\n  }\n  return groupedChunks;\n}\n","import Pagination from 'tui-pagination';\nimport 'tui-pagination/dist/tui-pagination.css';\n\nfunction resizeVisPage() {\n  const screenWidth = window.innerWidth;\n  return screenWidth < 768 ? 2 : 3;\n}\n\nfunction createPagination(page, perPage, totalPages, callback) {\n  const options = {\n    totalItems: perPage * totalPages,\n    itemsPerPage: perPage,\n    visiblePages: resizeVisPage(),\n    page,\n    centerAlign: false,\n    omitMiddlePages: false,\n    firstItemClassName: 'tui-first-child',\n    lastItemClassName: 'tui-last-child',\n    template: {\n      page: '<a href=\"#\" class=\"tui-page-btn pag-page\">{{page}}</a>',\n      currentPage:\n        '<strong class=\"tui-page-btn tui-is-selected\">{{page}}</strong>',\n      moveButton:\n        '<a href=\"#\" class=\"tui-page-btn tui-{{type}} move-button\">' +\n        '<span class=\"tui-ico-{{type}}\">{{type}}</span>' +\n        '</a>',\n      disabledMoveButton:\n        '<span class=\"tui-page-btn tui-is-disabled tui-{{type}} prev-button\">' +\n        '<span class=\"tui-ico-{{type}}\">{{type}}</span>' +\n        '</span>',\n      moreButton:\n        '<a href=\"#\" class=\"tui-page-btn tui-{{type}}-is-ellip more-button\">' +\n        '<span class=\"tui-ico-ellip\">...</span>' +\n        '</a>',\n    },\n  };\n\n  const pagination = new Pagination('pagination', options);\n\n  pagination.on('afterMove', ({ page }) => {\n    callback(page);\n  });\n}\n\nexport default createPagination;\n","import refs from './constants';\nimport { getFromLocalStorage } from '../favorite/localStorageUtils';\nimport { countPage, groupArrayIntoChunks } from '../favorite/utils';\nimport createPagination from '../favorite/pagination';\nimport { renderingFavRec } from '../favorite/rendering-fav';\nimport { showLoader, hideLoader } from '../loader';\n\nexport function displayFavorites(pageSet = 1) {\n  showLoader();\n\n  const data = getFromLocalStorage('favorites-data');\n\n  // Show or hide the \"All\" button based on whether there is data in localStorage.\n  refs.allButton.style.display = data && data.length ? 'block' : 'none';\n\n  // Display a message and hide the \"All\" button if there is no data in localStorage or the data array is empty.\n  if (!data || data.length === 0) {\n    refs.noFavoritesMessage.classList.remove('visually-hidden');\n    refs.allButton.classList.add('visually-hidden');\n    if (window.innerWidth < 768)\n      refs.heroImage.classList.add('visually-hidden');\n    return;\n  }\n\n  const perPage = countPage();\n  const objData = groupArrayIntoChunks(data, perPage);\n  const totalPages = Object.keys(objData).length;\n\n  refs.paginationElement.style.display = totalPages > 1 ? 'block' : 'none';\n  createPagination(pageSet, perPage, totalPages, displayFavorites);\n\n  const listMarkup = objData[pageSet]\n    .map(({ title, description, preview, rating, id, category }) =>\n      renderingFavRec(title, description, preview, rating, id, category)\n    )\n    .join('');\n\n  refs.recipesListContainer.innerHTML = listMarkup;\n  refs.noFavoritesMessage.classList.add('visually-hidden');\n\n  hideLoader();\n}\n","import refs from './constants';\nimport { countPage, groupArrayIntoChunks } from '../favorite/utils';\nimport { renderingFavRec } from '../favorite/rendering-fav';\nimport createPagination from '../favorite/pagination';\nimport { displayFavorites } from '../favorite/display-favorites';\nimport { showLoader, hideLoader } from '../loader';\n\nlet currentBtn = '';\n\n/**\n * Toggles the 'is-active' class on the target element.\n */\nfunction toggleActiveClass({ target }) {\n  const btn = document.querySelector('.is-active');\n  if (!btn) refs.allButton.classList.add('is-active');\n  else btn.classList.remove('is-active');\n  target.classList.add('is-active');\n}\n\n/**\n * Handles the category filter event.\n * {Event} evt - The event object.\n */\nexport function handleCategoryFilter(evt) {\n  showLoader();\n\n  if (evt.target.classList.contains('is-active')) return;\n\n  let data = [];\n  let categoryRecipes;\n  refs.recipesListContainer.innerHTML = '';\n\n  if (evt !== Number(evt) && evt.target.nodeName === 'BUTTON') {\n    toggleActiveClass(evt);\n    currentBtn =\n      evt.target.name === 'main-cat-btn' ? '' : evt.target.textContent;\n  }\n\n  const storage = localStorage.getItem('favorites-data');\n  data = JSON.parse(storage);\n\n  if (!data || data.length === 0) {\n    refs.categoriesContainer.style.display = 'none';\n    return;\n  }\n\n  if (!currentBtn) {\n    displayFavorites();\n    return;\n  }\n\n  categoryRecipes = [...data.filter(recipe => recipe.category === currentBtn)];\n\n  let pageSet = 1;\n\n  if (Number(evt) === evt) pageSet = evt;\n\n  const perPage = countPage();\n  const objData = groupArrayIntoChunks(categoryRecipes, perPage);\n  const totalPages = Object.keys(objData).length;\n\n  refs.paginationElement.style.display = totalPages > 1 ? 'block' : 'none';\n  createPagination(pageSet, perPage, totalPages, displayFavorites);\n\n  const listMarkup = objData[pageSet].reduce(\n    (markup, { title, description, preview, rating, id, category }) =>\n      markup +\n      renderingFavRec(title, description, preview, rating, id, category),\n    ''\n  );\n\n  refs.recipesListContainer.innerHTML = listMarkup;\n\n  hideLoader();\n}\n","import { getFromLocalStorage } from '../favorite/localStorageUtils';\nimport { showLoader, hideLoader } from '../loader';\n\n/**\n * Generates the markup for a category button.\n * {string} category - The category name.\n * return {string} The category button markup.\n */\nexport function renderCategories(category) {\n  return `<button class=\"fav-button\">${category}</button>`;\n}\n\n/**\n * Updates the category list in the favorites view based on the selected recipe's category.\n *  target - The target element representing the selected recipe.\n */\nexport function updateCategoryList(target) {\n  showLoader();\n\n  const currentRec = target.closest('div.recipe-item').dataset.category;\n  const storageItems = getFromLocalStorage('favorites-data');\n  const isCategoryLocal = storageItems.find(el => el.category === currentRec);\n  const isCategoryRendered = [...refs.categoriesContainer.children].find(\n    el => el.textContent === currentRec\n  );\n\n  if (!isCategoryLocal && isCategoryRendered) isCategoryRendered.remove();\n  else if (isCategoryLocal && !isCategoryRendered)\n    refs.categoriesContainer.insertAdjacentHTML(\n      'beforeend',\n      renderCategories(currentRec)\n    );\n\n  refs.allButton.style.display =\n    storageItems && storageItems.length ? 'block' : 'none';\n\n  hideLoader();\n}\n","const scrollToTopBtn = document.querySelector('.scroll-to-top');\n\nfunction scrollToTop() {\n  window.scrollTo({\n    top: 0,\n    behavior: 'smooth',\n  });\n}\n\nscrollToTopBtn.addEventListener('click', scrollToTop);\n\nwindow.addEventListener('scroll', () => {\n  if (window.innerHeight + window.scrollY >= document.body.offsetHeight) {\n    setTimeout(() => {\n      scrollToTopBtn.style.display = 'block';\n    }, 500);\n  } else {\n    scrollToTopBtn.style.display = 'none';\n  }\n});\n"],"names":["parcelRequire","$tgDFu","$20e248ed8f18208c$export$2e2bcd8739ae039","recipesListContainer","document","querySelector","categoriesContainer","noFavoritesMessage","paginationElement","getElementById","allButton","categoriesList","renderedRecipesBox","heroImage","$0b90890a1da932c8$export$602bc7b349337fec","key","data","localStorage","getItem","JSON","parse","$d3697e17cd92e465$export$8242f68f012ef212","window","innerWidth","$d3697e17cd92e465$export$56232b55f4742cda","array","chunkSize","groupedChunks","i","length","Math","floor","slice","$fb9GJ","$c545c7fc7fd23f95$export$2e2bcd8739ae039","page1","perPage","totalPages","callback","options","totalItems","itemsPerPage","visiblePages","page","centerAlign","omitMiddlePages","firstItemClassName","lastItemClassName","template","currentPage","moveButton","disabledMoveButton","moreButton","$parcel$interopDefault","on","$4790cd9aedfda2f9$export$4c708a11c3ac73b5","pageSet","$gjiCh","showLoader","style","display","classList","remove","add","objData","Object","keys","listMarkup","map","title","description","preview","rating","id","category","$fT9c6","renderingFavRec","join","innerHTML","hideLoader","$cea7a26fcc5011ce$var$currentBtn","$179aa69f42ac4dcc$export$f20c709553293f6e","$179aa69f42ac4dcc$export$5386e614270b0ccf","target","currentRec","closest","dataset","storageItems","isCategoryLocal","find","el","isCategoryRendered","refs","children","textContent","insertAdjacentHTML","default","$b3d3a0e19b96645d$var$onFavoritesReload","categoryMarkup","storage","flatMap","recipe","filter","index","indexOf","reduce","$b3d3a0e19b96645d$var$createCategoryList","addEventListener","links","querySelectorAll","contains","getRecipe","then","response","arr","results","toStorage","_id","j","push","setItem","stringify","currentBtn","name","recipeInfo","info","$b3d3a0e19b96645d$var$removeFavorite","console","log","evt","categoryRecipes","Number","nodeName","btn","$cea7a26fcc5011ce$var$toggleActiveClass","markup","$6233dfb0e17f0722$var$scrollToTopBtn","scrollTo","top","behavior","innerHeight","scrollY","body","offsetHeight","setTimeout"],"version":3,"file":"favorites.985c6144.js.map"}